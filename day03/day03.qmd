---
title: "Day 3"
format: html
---

```{r setup}
library(here)
library(stringr)
```


## Part 1

```{r}
extract_mul_tuples <- function(input_string) {
  ops_list <- str_extract_all(input_string, "(mul\\([0-9]{1,3},[0-9]{1,3}\\))")[[1]]
  str_remove_all(ops_list, "mul\\(|\\)")
}
```

```{r}
compute_muls <- function(tuples) {
  running_sum <- 0
  for (t in seq_along(tuples)) {
    running_sum <- running_sum + prod(as.numeric(str_split_fixed(tuples[t], ",", n = 2)))
  }
  running_sum
}
```

```{r}
processFile <- function(filepath) {
  sum_muls <- 0
  con = file(filepath, "r")
  while (TRUE) {
    line = readLines(con, n = 1)
    if ( length(line) == 0 ) {
      break
    }
    tuples <- extract_mul_tuples(line)
    this_sum <- compute_muls(tuples)
    sum_muls <- sum_muls + this_sum
  }
  close(con)
  return(sum_muls)
}
```

```{r}
processFile(here("day03", "input")) 
```


## Part 2

```{r}
input_line <- "xmul(2,4)&mul[3,7]!^don't()_mul(5,5)+mul(32,64](mul(11,8)undo()?mul(8,5))"

get_do_segments <- function(input_line) {
  sapply(
    str_split(
      str_split(input_line, pattern = "(do\\(\\))")[[1]],
      pattern = "(don\\'t\\(\\))"),
    "[[",1) 
}

compute_line_muls <- function(input_line) {
  
  line_muls <- sapply(
    X = sapply(
      X = get_do_segments(input_line),
      FUN = extract_mul_tuples),
    FUN = compute_muls
  )
  sum(line_muls)
}

processFile2 <- function(filepath) {
  sum_line_muls <- 0
  con = file(filepath, "r")
  while (TRUE) {
    next_line = readLines(con, n = 1)
    if ( length(next_line) == 0 ) {
      break
    }
    sum_line_muls <- sum_line_muls + compute_line_muls(next_line)
  }
  close(con)
  return(sum_line_muls)
}
```


```{r}
filepath <- here("day03", "input")
processFile2(filepath)
```
